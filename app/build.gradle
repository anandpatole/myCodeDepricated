apply plugin: 'com.android.application'

repositories {
    maven {
        url 'https://maven.fabric.io/public'
    }
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.cheep"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 33
        versionName "1.1.33" // PLEASE FIRST MAKE SURE MIN-VERSION IS 16.
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true

        // Enabling multidex support.
        multiDexEnabled true

        buildConfigField("String", "FILE_PROVIDER_URL", getProperty("FILE_PROVIDER_URL"))

        buildConfigField("String", "HOTLINE_APP_ID", getProperty("HOTLINE_APP_ID"))
        buildConfigField("String", "HOTLINE_APP_KEY", getProperty("HOTLINE_APP_KEY"))
        //Google Places API Key for PlacesAutoCompletiontask_discount_amount
        buildConfigField("String", "PLACES_API_KEY", getProperty("PLACES_API_KEY"))
        // Fetch DEFAULT X-API-KEY value from gradle.properties
        buildConfigField("String", "X_API_KEY", getProperty("X_API_KEY"))
        // Fetch Twitter Key value from gradle.properties
        buildConfigField("String", "TWITTER_KEY", getProperty("TWITTER_KEY"))
        // Fetch Twitter Secret Key value from gradle.properties
        buildConfigField("String", "TWITTER_SECRET", getProperty("TWITTER_SECRET"))
        // Fetch Cheep Helpline number
        buildConfigField("String", "CHEEP_HELPLINE_NUMBER", getProperty("CHEEP_HELPLINE_NUMBER"))
        //User Type whether its User or PRO
        buildConfigField("String", "USER_TYPE", getProperty("USER_TYPE"))
        // Playstore URL
        buildConfigField("String", "PLAYSTORE_URL", getProperty("PLAYSTORE_URL"))

        // Payment Success URL
        buildConfigField("String", "PAYUBIZ_SUCCESS_URL", getProperty("PAYUBIZ_SUCCESS_URL"))
        buildConfigField("String", "PAYUBIZ_FAIL_URL", getProperty("PAYUBIZ_FAIL_URL"))
        buildConfigField("String", "PAYUBIZ_INSTRUMENT_ID", getProperty("PAYUBIZ_INSTRUMENT_ID"))
        buildConfigField("int", "PAYUBIZ_ENVIRONMENT", getProperty("PAYUBIZ_SANDBOX_ENVIRONMENT"))

        //AppsFlyer
        buildConfigField("String", "APPSFLYER_DEV_KEY", getProperty("APPSFLYER_DEV_KEY"))

        // Below Key value pairs would get change based on Buildtype
        buildConfigField("String", "BASE_URL", getProperty("DEVELOPMENT_BASE_URL"))
        buildConfigField("String", "BASE_URL_API", getProperty("DEVELOPMENT_BASE_URL_API"))
        buildConfigField("String", "CHAT_NODE", getProperty("CHAT_NODE_DEBUG"))
        buildConfigField("String", "PAYUBIZ_HDFC_KEY", getProperty("PAYUBIZ_HDFC_SANDBOX_KEY"))
        buildConfigField("String", "PAYUBIZ_HDFC_URL", getProperty("PAYUBIZ_HDFC_SANDBOX_URL"))
        buildConfigField("String", "AMAZON_S3_URL", getProperty("AMAZON_S3_URL"))
        buildConfigField("String", "COGNITO_POOL_ID ", getProperty("COGNITO_POOL_ID"))
        buildConfigField("String", "BUCKET_NAME ", getProperty("BUCKET_NAME"))
        buildConfigField("String", "TASK_ORIGINAL_FOLDER ", getProperty("TASK_ORIGINAL_FOLDER"))
        buildConfigField("String", "TASK_THUMB_FOLDER ", getProperty("TASK_THUMB_FOLDER"))
        buildConfigField("String", "REFER_AND_SHARE_APP_URL", getProperty("REFER_AND_SHARE_APP_URL"))
        buildConfigField("boolean", "NEED_TO_BYPASS_PAYMENT", "false")

        //Paytm
        buildConfigField("String", "PAYTM_OAUTH_BASE_URL", getProperty("PAYTM_OAUTH_STAGING_BASE_URL"))
        buildConfigField("String", "PAYTM_WALLET_BASE_URL", getProperty("PAYTM_WALLET_STAGING_BASE_URL"))
        buildConfigField("String", "PAYTM_CHECK_BALANCE_URL", getProperty("PAYTM_CHECK_BALANCE_STAGING_URL"))
        buildConfigField("String", "SANDBOX_MERCHANT_ID", getProperty("MERCHANT_ID_STAGING"))
        buildConfigField("String", "MERCHANT_KEY", getProperty("MERCHANT_KEY_STAGING"))
        buildConfigField("String", "CLIENT_ID", getProperty("CLIENT_ID_STAGING"))
        buildConfigField("String", "CHANNEL_ID", getProperty("CHANNEL_ID"))
        buildConfigField("String", "INDUSTRY_TYPE_ID", getProperty("INDUSTRY_TYPE_ID_STAGING"))
        buildConfigField("String", "CLIENT_SECRET", getProperty("CLIENT_SECRET_STAGING"))
        buildConfigField("String", "WEBSITE", getProperty("WEBSITE_STAGING"))
        buildConfigField("String", "COUNTRY_CODE", getProperty("COUNTRY_CODE_INDIA"))


        resValue("string", "com.twitter.sdk.android.CONSUMER_KEY",
                (project.findProperty("TWITTER_KEY") ?: ""))

        resValue("string", "com.twitter.sdk.android.CONSUMER_SECRET",
                (project.findProperty("TWITTER_SECRET") ?: ""))
    }

    // Source Sets
    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res-paynimo',
                    'src/main/res/layouts/cheepcare',
                    'src/main/res/layouts/strategicpartner',
                    'src/main/res/layouts/others',
                    'src/main/res/layouts',
                    'src/main/res'
            ]
        }
    }

    // We are using apache library for MultiPart portion so, have to use below line to make apache library accessible on API LEVEL >=23
    useLibrary 'org.apache.http.legacy'

//    productFlavors{
//
//
//        malasiya
//        {
//            versionCode 1
//            versionName "1.0" // PLEASE FIRST MAKE SURE MIN-VERSION IS 16.
//        }
//    }
    buildTypes {
        debug {
            versionNameSuffix "-SNAPSHOT"
        }

        staging {
            versionNameSuffix "-STAGING"
            // Below Key value pairs would get change based on Buildtype
            buildConfigField("String", "BASE_URL", getProperty("STAGING_BASE_URL"))
            buildConfigField("String", "BASE_URL_API", getProperty("STAGING_BASE_URL_API"))
            buildConfigField("String", "CHAT_NODE", getProperty("CHAT_NODE_DEBUG"))
            buildConfigField("String", "PAYUBIZ_HDFC_KEY", getProperty("PAYUBIZ_HDFC_SANDBOX_KEY"))
            buildConfigField("String", "PAYUBIZ_HDFC_URL", getProperty("PAYUBIZ_HDFC_SANDBOX_URL"))
            buildConfigField("boolean", "NEED_TO_BYPASS_PAYMENT", "true")
            buildConfigField("int", "PAYUBIZ_ENVIRONMENT", getProperty("PAYUBIZ_SANDBOX_ENVIRONMENT"))

            // Paytm
            buildConfigField("String", "PAYTM_OAUTH_BASE_URL", getProperty("PAYTM_OAUTH_STAGING_BASE_URL"))
            buildConfigField("String", "PAYTM_WALLET_BASE_URL", getProperty("PAYTM_WALLET_STAGING_BASE_URL"))
            buildConfigField("String", "PAYTM_CHECK_BALANCE_URL", getProperty("PAYTM_CHECK_BALANCE_STAGING_URL"))
            buildConfigField("String", "SANDBOX_MERCHANT_ID", getProperty("MERCHANT_ID_STAGING"))
            buildConfigField("String", "MERCHANT_KEY", getProperty("MERCHANT_KEY_STAGING"))
            buildConfigField("String", "CLIENT_ID", getProperty("CLIENT_ID_STAGING"))
            buildConfigField("String", "CHANNEL_ID", getProperty("CHANNEL_ID"))
            buildConfigField("String", "INDUSTRY_TYPE_ID", getProperty("INDUSTRY_TYPE_ID_STAGING"))
            buildConfigField("String", "CLIENT_SECRET", getProperty("CLIENT_SECRET_STAGING"))
            buildConfigField("String", "WEBSITE", getProperty("WEBSITE_STAGING"))

            signingConfig signingConfigs.debug
        }

        DebugMalaysia {
            versionNameSuffix "-MALASIYA"
            // Below Key value pairs would get change based on Buildtype
            buildConfigField("String", "BASE_URL", getProperty("MALAYSIA_BASE_URL"))
            buildConfigField("String", "BASE_URL_API", getProperty("MALAYSIA_BASE_URL_API"))
            buildConfigField("String", "CHAT_NODE", getProperty("CHAT_NODE_DEBUG"))
            buildConfigField("String", "PAYUBIZ_HDFC_KEY", getProperty("PAYUBIZ_HDFC_SANDBOX_KEY"))
            buildConfigField("String", "PAYUBIZ_HDFC_URL", getProperty("PAYUBIZ_HDFC_SANDBOX_URL"))
            buildConfigField("boolean", "NEED_TO_BYPASS_PAYMENT", "false")

            // Paytm
            buildConfigField("String", "PAYTM_OAUTH_BASE_URL", getProperty("PAYTM_OAUTH_STAGING_BASE_URL"))
            buildConfigField("String", "PAYTM_WALLET_BASE_URL", getProperty("PAYTM_WALLET_STAGING_BASE_URL"))
            buildConfigField("String", "PAYTM_CHECK_BALANCE_URL", getProperty("PAYTM_CHECK_BALANCE_STAGING_URL"))
            buildConfigField("String", "SANDBOX_MERCHANT_ID", getProperty("MERCHANT_ID_STAGING"))
            buildConfigField("String", "MERCHANT_KEY", getProperty("MERCHANT_KEY_STAGING"))
            buildConfigField("String", "CLIENT_ID", getProperty("CLIENT_ID_STAGING"))
            buildConfigField("String", "CHANNEL_ID", getProperty("CHANNEL_ID"))
            buildConfigField("String", "INDUSTRY_TYPE_ID", getProperty("INDUSTRY_TYPE_ID_STAGING"))
            buildConfigField("String", "CLIENT_SECRET", getProperty("CLIENT_SECRET_STAGING"))
            buildConfigField("String", "WEBSITE", getProperty("WEBSITE_STAGING"))

            signingConfig signingConfigs.debug
        }

        live {



            versionNameSuffix "-LIVE"
            buildConfigField("String", "BASE_URL", getProperty("STAGING_BASE_URL"))
            buildConfigField("String", "BASE_URL_API", getProperty("STAGING_BASE_URL_API"))
            buildConfigField("String", "CHAT_NODE", getProperty("CHAT_NODE_LIVE"))
            buildConfigField("String", "PAYUBIZ_HDFC_KEY", getProperty("PAYUBIZ_HDFC_LIVE_KEY"))
            buildConfigField("String", "PAYUBIZ_HDFC_URL", getProperty("PAYUBIZ_HDFC_LIVE_URL"))
            buildConfigField("boolean", "NEED_TO_BYPASS_PAYMENT", "false")
            buildConfigField("int", "PAYUBIZ_ENVIRONMENT", getProperty("PAYUBIZ_LIVE_ENVIRONMENT"))

            // Paytm
            buildConfigField("String", "PAYTM_OAUTH_BASE_URL", getProperty("PAYTM_OAUTH_PRODUCTION_BASE_URL"))
            buildConfigField("String", "PAYTM_WALLET_BASE_URL", getProperty("PAYTM_WALLET_PRODUCTION_BASE_URL"))
            buildConfigField("String", "PAYTM_CHECK_BALANCE_URL", getProperty("PAYTM_CHECK_BALANCE_PRODUCTION_URL"))
            buildConfigField("String", "SANDBOX_MERCHANT_ID", getProperty("MERCHANT_ID_PRODUCTION"))
            buildConfigField("String", "MERCHANT_KEY", getProperty("MERCHANT_KEY_PRODUCTION"))
            buildConfigField("String", "CLIENT_ID", getProperty("CLIENT_ID_PRODUCTION"))
            buildConfigField("String", "CHANNEL_ID", getProperty("CHANNEL_ID"))
            buildConfigField("String", "INDUSTRY_TYPE_ID", getProperty("INDUSTRY_TYPE_ID_PRODUCTION"))
            buildConfigField("String", "CLIENT_SECRET", getProperty("CLIENT_SECRET_PRODUCTION"))
            buildConfigField("String", "WEBSITE", getProperty("WEBSITE_PRODUCTION"))

            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField("String", "BASE_URL", getProperty("LIVE_BASE_URL"))
            buildConfigField("String", "BASE_URL_API", getProperty("LIVE_BASE_URL_API"))
            buildConfigField("String", "CHAT_NODE", getProperty("CHAT_NODE_LIVE"))
            buildConfigField("String", "PAYUBIZ_HDFC_KEY", getProperty("PAYUBIZ_HDFC_LIVE_KEY"))
            buildConfigField("String", "PAYUBIZ_HDFC_URL", getProperty("PAYUBIZ_HDFC_LIVE_URL"))
            buildConfigField("boolean", "NEED_TO_BYPASS_PAYMENT", "false")
            buildConfigField("int", "PAYUBIZ_ENVIRONMENT", getProperty("PAYUBIZ_LIVE_ENVIRONMENT"))

            // Paytm
            buildConfigField("String", "PAYTM_OAUTH_BASE_URL", getProperty("PAYTM_OAUTH_PRODUCTION_BASE_URL"))
            buildConfigField("String", "PAYTM_WALLET_BASE_URL", getProperty("PAYTM_WALLET_PRODUCTION_BASE_URL"))
            buildConfigField("String", "PAYTM_CHECK_BALANCE_URL", getProperty("PAYTM_CHECK_BALANCE_PRODUCTION_URL"))
            buildConfigField("String", "SANDBOX_MERCHANT_ID", getProperty("MERCHANT_ID_PRODUCTION"))
            buildConfigField("String", "MERCHANT_KEY", getProperty("MERCHANT_KEY_PRODUCTION"))
            buildConfigField("String", "CLIENT_ID", getProperty("CLIENT_ID_PRODUCTION"))
            buildConfigField("String", "CHANNEL_ID", getProperty("CHANNEL_ID"))
            buildConfigField("String", "INDUSTRY_TYPE_ID", getProperty("INDUSTRY_TYPE_ID_PRODUCTION"))
            buildConfigField("String", "CLIENT_SECRET", getProperty("CLIENT_SECRET_PRODUCTION"))
            buildConfigField("String", "WEBSITE", getProperty("WEBSITE_PRODUCTION"))

            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android {
        lintOptions {
            checkReleaseBuilds false
        }
    }
    //DataBinding needs to be enabled
    dataBinding {
        enabled true
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        disable 'LongLogTag'
        checkReleaseBuilds false
    }

}

//Added to resolve this error
//Warning:WARNING: Dependency xpp3:xpp3:1.1.4c is ignored for release as it may be conflicting with the internal version provided by Android.
// In case of problem, please repackage it with jarjar to change the class packages
configurations {
    all*.exclude group: 'xpp3', module: 'xpp3'
}

// Description
ext {
    supportLibVer = '27+'
    gsonLibVer = '2.7'
    playServiceVer = '15.0.1'
    firebaseServiceVer = '11.8.0'
    firebaseMessagingServiceVer = '17.1.0'
    firebaseCoreServiceVer = '16.0.1'
    firebaseCrashServiceVer = '16.0.1'
    firebaseDatabaseServiceVer = '16.0.1'
    firebaseInvitesServiceVer = '16.0.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:support-v4:$supportLibVer"
    // V7 Compat library, it also included v4 libraries under the hood.
    implementation "com.android.support:appcompat-v7:$supportLibVer"

    implementation "com.android.support:cardview-v7:$supportLibVer"

    // Design Support Library, it also included Multidex library support, So there is no need to provide
    // another library here.
    implementation "com.android.support:design:$supportLibVer"

    // Gson Library
    implementation "com.google.code.gson:gson:$gsonLibVer"

    //For Getting Location
    implementation "com.google.android.gms:play-services-location:$playServiceVer"

    //For Google SignIn
    implementation "com.google.android.gms:play-services-auth:$playServiceVer"

    implementation "com.google.android.gms:play-services-places:$playServiceVer"
    // FCM (Push Notification)
    implementation "com.google.firebase:firebase-messaging:$firebaseMessagingServiceVer"

    //Encryption
    implementation files('libs/jncryptor-1.2.0.jar')

    //firebase crash
    implementation "com.google.firebase:firebase-core:$firebaseCoreServiceVer"
    implementation "com.google.firebase:firebase-crash:$firebaseCrashServiceVer"

    // firebase database sdk
    implementation "com.google.firebase:firebase-database:$firebaseDatabaseServiceVer"

    //For dynamic links
    implementation "com.google.firebase:firebase-invites:$firebaseInvitesServiceVer"

    //Twitter
//    implementation('com.twitter.sdk.android:twitter:2.3.2@aar') {
//        transitive = true
//    }

    implementation 'com.twitter.sdk.android:twitter-core:3.1.1'

    // Glide Library

    // Swipe layout library This is Test Experiment

    //Volley Library

    //Apache Library

    //Facebook

    //For Image Cropping

    //  View pager indicator for Cover Images & Banner Images

    // For Broadcasting

    // For PayUMoney payment integration

    // HotLine integration(For Chat to Cheep Admin)

    // for paytm html response reading form input tags
    implementation 'com.android.support:multidex:1.0.2'
   //implementation 'com.github.bumptech.glide:glide:3.7.0'

    implementation( 'com.github.bumptech.glide:glide:4.7.1')
            {
                exclude group: "com.android.support"
            }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
    implementation 'com.android.volley:volley:1.0.0'
    implementation 'org.apache.httpcomponents:httpmime:4.3.6'
//    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    implementation 'com.facebook.android:facebook-android-sdk:4.23.0'

 //   implementation 'com.android.support:support-v4:27.1.1'
    implementation "com.android.support:cardview-v7:$supportLibVer"
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.3.1'
    implementation 'me.relex:circleindicator:1.2.2@aar'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.payu.india:payu-sdk:4.4.4'
    implementation 'com.payu.custombrowser:payu-custom-browser:7.1.3'
    implementation 'com.payu.magicretry:magicretry:1.0.0'
    //This will be removed after successfully implementation of FreshChat
    implementation 'com.github.freshdesk:hotline-android:1.2.5'
    implementation 'com.github.freshdesk:freshchat-android:1.3.3'
//    implementation 'com.appsflyer:af-android-sdk:4.7.2@aar'
    implementation 'com.appsflyer:af-android-sdk:4.8.7@aar'

    implementation 'com.amazonaws:aws-android-sdk-s3:2.6.+'
//    implementation 'org.jsoup:jsoup:1.10.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation files('libs/paynimo_v3.2_uat.jar')

    //////////////////////
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okio:okio:1.13.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'de.greenrobot:eventbus:2.4.0'
    implementation 'com.wdullaer:materialdatetimepicker:3.6.2'
    /////////////////////////////
    implementation 'com.mixpanel.android:mixpanel-android:5.4.1'
    implementation project(':sdkui')

}

// Add to the bottom of the file
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'io.fabric'

